# -*- coding: utf-8 -*-
"""reducer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YzJ-vUsO5VYCyMrfPMow3s2IdxXkyQ0i
"""

from operator import itemgetter
import sys, math

current_word = None
current_count = 0
word = None
differentWorldsCounter = 0
mostFrequentWordsMain = {}
mostFrequentWordsAux = {}

# input comes from STDIN
for line in sys.stdin:
    # remove leading and trailing whitespace
    line = line.strip()
    line = line.lower()

    # parse the input we got from mapper.py
    word, count = line.split('\t', 1)
    try:
        count = int(count)
    except ValueError:
        # count was not a number, so silently
        # ignore/discard this line
        continue

    # this IF-switch only works because Hadoop sorts map output
    # by key (here: word) before it is passed to the reducer
    if current_word == word:
        current_count += count
    else:
        if current_word:
            # write result to STDOUT
            differentWorldsCounter += 1
            mostFrequentWordsMain[str(current_word)] = current_count
            mostFrequentWordsAux[str(current_word)] = current_count
        current_count = count
        current_word = word

# do not forget to output the last word if needed!
if current_word == word:
    differentWorldsCounter += 1
    mostFrequentWordsMain[str(current_word)] = current_count
    mostFrequentWordsAux[str(current_word)] = current_count

print("Questão1) O número de palavras distintas são: ", differentWorldsCounter)

print("Questão2) As palavras que mais se repetem são:")
mostFrequentWordsRange = range(0, 10)
for word in mostFrequentWordsRange:
    max_key = max(mostFrequentWordsAux, key=mostFrequentWordsAux.get)
    print(max_key)
    del mostFrequentWordsAux[max_key]

print("Questão3) Histograma(intervalo - quantidade):")
#pegando o valor de maior frequência
keyMax = max(mostFrequentWordsMain, key=mostFrequentWordsMain.get)
keyMin = min(mostFrequentWordsMain, key=mostFrequentWordsMain.get) 
if(mostFrequentWordsMain[keyMax]<10):
  print("Não é possível formar o histograma com 10 classes.")
else:
  #definindo as classes
  histogram = {}
  lastIntervalValue = 1
  k = 10
  interval = mostFrequentWordsMain[keyMax] - mostFrequentWordsMain[keyMin]
  interval = math.floor(interval/k)
  aux = interval
  for i in range(0,10):  
      count = 0
      for word in mostFrequentWordsMain:
          if(mostFrequentWordsMain[word]>lastIntervalValue and mostFrequentWordsMain[word]<=aux):
              count+=1
              histogram[str(aux)] = count
              
      lastIntervalValue = interval  
      aux+=interval
#imprimindo o histograma
last = 0              
for x in histogram:
  print(int(last)+1,"a",int(x)+1," - ",histogram[x])
  last=x  
